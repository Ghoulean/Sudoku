plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    // Pretty print test output
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

dependencies {
    // Apache Commons Lang
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    // lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    // log4j
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    // Dagger 2
    implementation 'com.google.dagger:dagger:2.40'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.40'
    // Google Guava (preconditions)
    implementation 'com.google.guava:guava:31.0.1-jre'
    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

version = '0.1.0'

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('jacoco')
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.named('jacocoTestReport') {
    dependsOn test
    enabled = false
    reports {
        html.required = true
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

tasks.named('jacocoTestCoverageVerification') {
    violationRules {
        failOnViolation = true
        rule {
            element = 'CLASS'
            excludes = ['com.ghoulean.sudoku.boards.*', 'com.ghoulean.sudoku.helper.*']
            limit {
                minimum = 0.80
            }
        }
    }
}

checkstyle {
    toolVersion '9.2.1';
}

tasks.named("check") {
    dependsOn jacocoTestCoverageVerification
}


publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId 'com.ghoulean'
      artifactId 'sudoku'
      version '0.1.0'

      from components.java
    }
  }
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/Ghoulean/Sudoku"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}
